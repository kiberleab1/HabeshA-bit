@model HabeshaBit.Models.Search

@{
    ViewBag.Title = "SerachResult";
    Layout = "~/Views/Search/Index.cshtml";
}

<h2>SerachResult</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Search</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.searchQuery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.searchQuery, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.searchQuery, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.m, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.m, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.m, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
 @foreach (var item in Model.results)
            {


    <div class="col-xs-6 col-sm-4 col-md-3 col-lg-2">
    <div class="item">
        <div class="pos-rlt">
            <div class="item-overlay opacity r r-2x bg-black">
                <div class="center text-center m-t-n">
                    <a href="@Url.Content(@item.musicPath)"><i class="icon-control-play i-2x"></i></a>
                </div>
            </div>
            <a href="@Url.Content(@item.picPath)">
                <img src="~/@item.picPath" class="r r-2x img-full">
            </a>
        </div>
        <div class="padder-v">
            <a href="@Url.Content(@item.musicPath)" class="text-ellipsis">@item.musicName</a>
            <a href="@Url.Content(@item.musicPath)" class="text-ellipsis text-xs text-muted">@item.musicName</a>
        </div>
    </div>
</div>


            }
        }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
